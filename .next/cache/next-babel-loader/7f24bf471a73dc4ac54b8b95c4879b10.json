{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nexport function PaymentFormReducer(state, action) {\n  if (state.method === action.method) {\n    return _objectSpread({}, state, {\n      data: action.data\n    });\n  }\n\n  switch (action.method) {\n    case 'credit':\n      return _objectSpread({}, state, {\n        data: defaultSchema.credit\n      });\n\n    case 'shop':\n      return _objectSpread({}, state, {\n        data: defaultSchema.shop\n      });\n\n    case 'atm':\n      return _objectSpread({}, state, {\n        data: defaultSchema.atm\n      });\n\n    default:\n      throw new Error('No action is provided.');\n  }\n}\nvar defaultSchema = {\n  credit: {\n    email: '',\n    creditNumber: ['', '', '', ''],\n    expireMonth: '',\n    expireYear: '',\n    cvv: ''\n  },\n  shop: {},\n  atm: {}\n};","map":{"version":3,"sources":["/Users/mujing/Project/TimeRoom/week4-payment/reducer/index.js"],"names":["PaymentFormReducer","state","action","method","data","defaultSchema","credit","shop","atm","Error","email","creditNumber","expireMonth","expireYear","cvv"],"mappings":";AAAA,OAAO,SAASA,kBAAT,CAA4BC,KAA5B,EAAmCC,MAAnC,EAA0C;AAC7C,MAAGD,KAAK,CAACE,MAAN,KAAeD,MAAM,CAACC,MAAzB,EAAgC;AAC5B,6BAAWF,KAAX;AAAiBG,MAAAA,IAAI,EAACF,MAAM,CAACE;AAA7B;AACH;;AACD,UAAQF,MAAM,CAACC,MAAf;AACI,SAAK,QAAL;AACE,+BACKF,KADL;AAEEG,QAAAA,IAAI,EAACC,aAAa,CAACC;AAFrB;;AAGF,SAAK,MAAL;AACE,+BACKL,KADL;AAEEG,QAAAA,IAAI,EAACC,aAAa,CAACE;AAFrB;;AAGF,SAAK,KAAL;AACE,+BACKN,KADL;AAEEG,QAAAA,IAAI,EAACC,aAAa,CAACG;AAFrB;;AAGF;AACE,YAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AAdN;AAgBH;AAEA,IAAIJ,aAAa,GAAG;AACjBC,EAAAA,MAAM,EAAC;AACHI,IAAAA,KAAK,EAAC,EADH;AAEHC,IAAAA,YAAY,EAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,CAFV;AAGHC,IAAAA,WAAW,EAAC,EAHT;AAIHC,IAAAA,UAAU,EAAC,EAJR;AAKHC,IAAAA,GAAG,EAAC;AALD,GADU;AASjBP,EAAAA,IAAI,EAAC,EATY;AAUjBC,EAAAA,GAAG,EAAC;AAVa,CAApB","sourcesContent":["export function PaymentFormReducer(state, action){\n    if(state.method===action.method){\n        return {...state,data:action.data}\n    } \n    switch (action.method) {\n        case 'credit':\n          return {\n            ...state,\n            data:defaultSchema.credit};\n        case 'shop':\n          return{\n            ...state,\n            data:defaultSchema.shop};\n        case 'atm':\n          return {\n            ...state,\n            data:defaultSchema.atm};\n        default:\n          throw new Error('No action is provided.');\n    }\n}\n\n let defaultSchema = {\n    credit:{\n        email:'', \n        creditNumber:['','','',''],\n        expireMonth:'',\n        expireYear:'',\n        cvv:''\n\n    },\n    shop:{}, \n    atm:{} \n}\n"]},"metadata":{},"sourceType":"module"}