{"version":3,"file":"static/webpack/static/development/pages/index.js.3c11d08a4a10bb7d799a.hot-update.js","sources":["webpack:///./components/PayByCredit.js","webpack:///./pages/index.js","webpack:///./utils/paymentMethods.js"],"sourcesContent":["import React,{useContext,useState,useEffect}  from \"react\"\nimport {PaymentContext} from '../context'\nlet PayByCredit = () =>{\n    let {paymentData,paymentDispatcher} = useContext(PaymentContext) \n    let [creditData,setCreditData] = useState(paymentData.data)\n    let onEmailChange = (e)=>{\n        console.log(e.target)\n        let value = e.target.value\n         setCreditData(prev=>{\n            return {...prev,email:value }\n        })\n    }\n    return (\n        <>\n        <div className=\"form-group\">\n            <label >付款人信箱</label>\n            <input type=\"email\" onChange={onEmailChange}  /> \n        </div>\n        <div className=\"form-credit form-group\">\n                <label> 信用卡卡號：</label>\n                <input type=\"text\" maxLength=\"4\"/>\n                <span className=\"separater\"> - </span>\n                <input type=\"text\" maxLength=\"4\" />          \n                <span className=\"separater\"> - </span>\n                <input type=\"text\" maxLength=\"4\" />\n                <span className=\"separater\"> - </span>\n                <input type=\"text\" maxLength=\"4\" />\n                <span className=\"visa\">\n                    VISA\n                </span>\n        </div>\n        <div className=\"form-expire form-group\">\n            <label> 有效年月：</label> \n            <input type=\"text\" placeholder=\"MM\" maxLength=\"2\"/>\n            <span className=\"separater-expire\"> \n                月  \n                <span>/  </span>\n            </span>\n            <input type=\"text\" placeholder=\"YYYY\" maxLength=\"4\"/>\n            <span className=\"separater-expire\"> 年 </span>\n        </div>\n        <div className=\"form-expire form-group form-cvv\">\n            <label> 背後末三碼 </label> \n            <input type=\"text\" placeholder=\"CVV\"  maxLength=\"3\"/>\n        </div>\n        </>\n    )\n} \n\nexport default PayByCredit","import react,{useState,useReducer,useEffect} from 'react'\n \nimport {PaymentFormReducer} from '../reducer' \nimport {PaymentContext} from '../context'\nimport {defaultSchema} from '../utils/formSchema'\nimport {paymentMethods as methods} from '../utils/paymentMethods'\nimport '../scss/index.scss'\nimport PaymentCard from '../components/PaymentCard'\n\nlet paymentFormInit = {\n  method: '', \n  data:defaultSchema[methods[0].name]\n}\n\nfunction IndexPage() {\n  let [currentMethod,setCurrentMethod] = useState(methods[0].name)\n  let [paymentData, paymentDispatcher] = useReducer(PaymentFormReducer,paymentFormInit) \n  \n  useEffect(()=>{\n    paymentDispatcher({method:currentMethod})\n  },[currentMethod])\n\n  let onMethodClick = (method)=>{\n    setCurrentMethod(method)\n  }\n  return (\n    <PaymentContext.Provider value={{\n      paymentDispatcher,\n      paymentData\n      }}>\n      <div className=\"container\"> \n        <div className=\"row m-5\"> \n          <div className=\"col-8\"> \n            <div className=\"wrapper wrapper-payment \"> \n                <div className=\"wrapper-title\"> \n                  請選擇付款方式\n                </div>\n                <div className=\"wrapper-body\">\n                    <ul className=\"tab tab-method\">\n                    {\n                      methods.map((method,index)=>{\n                        return (\n                          <li className={`card card-method ${currentMethod===method.name ? 'active' : ''}` }\n                              onClick={()=>{onMethodClick(method.name)}}\n                              key={index}> \n                            <div className=\"card-img\">\n                              <img src={`/static/${method.img}`} alt=\"\"/>\n                            </div>\n                            <div className=\"card-title\"> \n                              {\n                                method.texts.map((text,index)=>(<h6 key={index}>{text}</h6>)) \n                              }\n                            </div>\n                        </li>\n                        ) \n                      }) \n                    }\n                    </ul>\n                    <div className=\"tab tab-method-page\">\n                        <PaymentCard payment={currentMethod}/>\n                    </div>  \n                    <div className=\"btn btn-teal btn-block py-3 mt-4\"> \n                      確定付款 ($1500)\n                    </div>\n                </div>\n              \n            </div>\n            \n          </div>\n          <div className=\"col-4\">\n            <div className=\"wrapper wrapper-order p-3\"> \n                <div className=\"wrapper-title\"> \n                  我的訂單\n                </div>\n                <ul className=\"wrapper-body flex-column\">\n                  <li> \n                    \b 流浪金屬史萊姆鎧甲 x 1 \n                  </li>\n                  <li>\n                      抗魔戒指 x 1\n                  </li>\n                  <li>\n                      萬能藥 x 3 \n                  </li>\n                  <li>\n                      賢者藥水 x 1 \n                  </li>\n\n                </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      </PaymentContext.Provider>\n  );\n}\n \nexport default IndexPage;","export let paymentMethods = [{\n    name: 'credit', \n    texts:['信用卡','刷卡'],\n    img:'card-light.png'\n  },\n  {\n    name:'shop',\n    texts:['超商代碼','繳費'],\n    img:'shop-light.png'\n  },\n  {\n    name:'atm',\n    texts:['ATM','轉帳'],\n    img:'ATM-light.png'\n  \n  }]"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;;;;;;;;;ACjGA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;;;;A","sourceRoot":""}